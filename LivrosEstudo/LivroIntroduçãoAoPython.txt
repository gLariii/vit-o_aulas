Livro: Introdução ao á programação com Python
    Algoritmos e logica para iniciantes - Nilo Ney Coutinho Menezes (3° Edição - novatec)

                                        Capitulo 1- motivação
"embora boa parte dos programadores ue conheço não seja exatamente o e classifico de 100% normal, e ninguem é"

print("OLá") 

print é uma função usada para enviar dados para tela do computador
"" -->  limitar inicio e fim das mensagens 

                                    Capitulo 2 - Preparando o ambiente

Instalação dos interpretadores da linguagem:
- download pela internet da versão mais atual do Python

editando arquivos:
- python pode usar qualquer editor de texto disponivel( notepad++ ou sublime)
- terminação de um arquivo em python é .python

cuidados:
- letras maiusculas e minusculas são diferentes
- aspas são muito importantes e nao devem ser esquecidas (não esquecer de fecha-las) 
- parenteses não sao opcionais no python, não os remova e sempre feche-os
- espaços são importantesm (identação)

primeiros programas 
- função print informa que vamos exibir algo na tela, então utilizamos ela sempre que quizermos mostrar algo para o usuario.
    Print("Mensagem)
Além disso ela pode ser usada para mostrar valores de variaveis ou ser feita como calculadora
    print(1+3)
    print(valoressomados)

- Operadores matematicos:
    + --> soma
    - --> subtração
    / --> divisão
    * --> multiplicação
    // --> divisão inteira (sem saber o resto e sem virgula)
    ** --> elevar um numero a um expoente, ou seja exponenciação ou potenciação
            (x**(4/3) --> o numero apos os * é o qual ele esta sendo elevado)
    % --> resto da divisão/modulo

(exercicios 1)

- conceitos de variaveis e atribuição :
A memoria de um computador é que nem uma grande estante e que cada compartimento tem um nome, e para armazenar algo nesse compartimento
usaremos o "=" (recebe)
    exemplo:
    a = 1 (a recebe 2)
    b = 3
    print(a+b)

Variavel é uma forma de guardar valores na memoria do computador, toda variavel precisa ter um nome para que seu valor seja utilizado
posteriormente.
a variavel facilita para descrever os passos para a solução do problema.

(exercicios cap 2)

                            Capitulo 3 - variaveis e entrada de dados

- Nomes de variaveis:
    - iniciar por letras
    - pode conter numero e "_" (NÃO PODE INICIAR COM NUMERO, pode começar com "_")
    - Não pode letras e caracteres especiais

- Tipo de variaveis numericas:
    - pode ser inteiros ou pontos flutuantes
        -  Inteiros : sao numeros sem ser decimal
        -  Ponto flutuante : contem virgula(ponto), mesmo q seja 0 --> 1.0
            -  Para separar numeros grandes pode se usar o "_" ex: 1_000_000 ==> um milhão

- Representações de valores numericos
    - explicação do sistema binario para a quantidade de numeros

- variaveis do tipo logico(booleano):
    - true(T) ou false (F)

- Operadores relacionais:
    - == --> igualdade
    - > --> maior que
    - < --> menor que
    - != --> diferente
    - >= --> maior ou igual que
    - <= --> menor ou igual que

    - # --> comentarios na linha (identificar os programas pelo seu nome e data de inicio)

- Operadores logicos:
    - not (não --> negação) --> operador unario (Utiliza apenas um operando)
        - exemplo:
            not true --> false
            not false --> true

    - and (e --> conjunção, ambos tem q ser True)  --> operador binario
        - exemplo:
            true and true --> true
            true and false --> false
            false and true --> false
            false and false --> false

    - or (ou --> disjunção, pelo menos um tem q ser True) --> operador binario
        - exemplo:
            true or true --> true
            true or false --> true
            false or true --> true
            false or false --> false

- expressões logicas:
Operadores logicos podem ser combinados em expressões logicas.
    - quando uma expressão tiver mais de uma operação logica, avalia-se o operador not primeiro,
seguido do operador and, e finalmente o or.
    - pode ser utilizado com operadores relacionais também.

    - exemplo:
        salario > 1000 and idade > 18
        2000 > 1000  and 30 > 18
            true and true
                true

- Variavel Sring:
    - Armazenam sequencias de caracteres como nomes e texto no geral, pode conter letras, numeros e ate caracteres especiais
    - para separar o texto do programa colocamos a string entre aspas ""
    
    - função LEN: é utilizada para saber o tamanho de uma string, ela retorna o numero de caracteres(string vazia --> "" --> len = 0).
        len("jaca") --> 4
    - tambem da para acessar o conteudo de uma string caracter por caracter (lembre-se a contagem de indice começa no 0)
      palavra = "jaca"
      palavra[0] --> j
    
- Operações com string( fatiação(utilizar apeas uma parte)/concatenação(juntar strings diferentes)/composição(fzr frases com strings))
    - concatenação exemplos:
     S = "ABC"
     S + "C" --> ABCC

     s + "D" * 4 --> ABCDDDD

     "X" + "-" *10 +"X" --> X----------x
     
     OBS: ESSE TIPO DE CONCATENAÇÃO SO PODE SER USADA COM strings

    - composição:

        - Utilizando %:

        "João tem %d anos" %X --> joao tem X anos (%d --> marcador de posição , indica que naquela posição estaremos colocando um inteiro)
        obs1: %d --> Numeros Inteiros
            %s --> string
            %f --> Numeros decimais

        obs2: para formatar a quantida de numero apos a virgula se usa .xf

        - Utilizando .format:
        nome = joao
        idade = 10
        dinheiro = 10.40
        "{} tem {} anos e R${}".format(nome,idade,dinheiro) --> joao tem 10 anos e R$10.40
        obs: da para usar espaçamento entre as palavras pegas no .format é so comolar ex: {nome:12} --> 12 pixel de distancia

        - f-string : modo mais utilizado ultimamente:
        nome = jaca
        f"A fruta se chama {nome}"
    
    - Fatiamento:
        s = "abcdefg"
        s[0:2] --> ab (variavel/nome[INICIO:FIM]) 
        OBS: pode indicar so o fim ou o so o começo [2:](começa do indice 2 e vai ate o fim) ou [:2] começa e termina no indice 2
    alem disso pode se usar negativo [-1:] começa do final pro começo(ultimo caracter)

- Entrada de dados(recebe dados ou valores):
    função Input
    x = Input("digite um texto:) --> oq for digitado sera armazenado na variavel

- Converção de dados:
    input sempre retorna string porem pode se convetido em outros valores como inteiros ou float

    x = int(input("digite um numero inteiro:"))
    y = float(input("digite um valor:"))

- Erros comuns: tratamentos de exceção.

                                          Capitulo 4 - Condições

- IF(SE):
    if<condição>:
        bloco verdadeiro

    - exemplo:
    a = 4
    b - 1

    if a>b:
        print(a)

    if a<b:
        print(b)

- IF/ELSE(SE/SENÃO):
    if<condição>:
        bloco verdadeiro
    else:
        bloco falso

    - exemplo:
    a = 4
    b - 1

    if a>b:
        print(a)
    else:
        print(b)

- ANINHAMENTO(if/else dentro de estrutras if/else):
    if<condição>
        if<condição>
            bloco verdadeiro
        else:
            bloco falso
    else:
        bloco falso

- ELIF:
    if<condição1>:
        bloco se for verdadeira a condição1
    elif<condição2>:
        bloco se for verdadeira a condição2
    else:
        bloco falso

                                         Capitulo 5 - Repetições